{"ast":null,"code":"var _jsxFileName = \"/Users/abigaildelgado/IOU/frontend/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react'; // import Header from \"../components/NavBar.js\" \n\nimport { Box, FormControl, FormLabel, FormErrorMessage, FormHelperText, Input, Button, Flex, Heading, InputLeftElement, InputGroup } from '@chakra-ui/react';\nimport { AtSignIcon, LockIcon } from '@chakra-ui/icons'; // import axios from 'axios'\n// const url = \"http://localhost:3030/user/signup/\" \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [nameInput, setNameInput] = useState('');\n  const [passInput, setPassInput] = useState('');\n\n  const handleNameInputChange = e => setNameInput(e.target.value);\n\n  const handlePassInputChange = e => setPassInput(e.target.value);\n\n  const isNameError = nameInput === '';\n  const isPassError = passInput === '';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"100%\",\n    position: \"fixed\",\n    w: \"100%\",\n    background: \"linear-gradient(134.89deg, #D86FCC 0.46%, #01055B 100.26%)\",\n    color: \"white\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      direction: \"column\",\n      justify: \"space-evenly\",\n      mr: \"30%\",\n      ml: \"30%\",\n      mt: \"100px\",\n      gap: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"xl\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        textAlign: \"center\",\n        as: \"h2\",\n        size: \"lg\",\n        children: \"Sign up and start managing your group expenditures!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: isNameError,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n              pointerEvents: \"none\",\n              children: /*#__PURE__*/_jsxDEV(AtSignIcon, {\n                color: \"gray.300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"username\",\n              type: \"username\",\n              value: nameInput,\n              onChange: handleNameInputChange,\n              placeholder: \"Username\" // bg=\"rgba(255, 255, 255, 0.1)\"\n              ,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), !isNameError ? // <FormHelperText color=\"white\">\n          // Enter a unique username.\n          // </FormHelperText>\n          console.log(\"hey\") : /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n            children: \"A username is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: isPassError,\n          colorScheme: \"whiteAlpha\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n              pointerEvents: \"none\",\n              children: /*#__PURE__*/_jsxDEV(LockIcon, {\n                color: \"gray.300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              type: \"password\",\n              value: passInput,\n              onChange: handlePassInputChange,\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), !isPassError ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n            color: \"white\",\n            children: \"Enter a password you won't forget!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n            children: \"A password is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          bg: \"#CA41D6\",\n          size: \"lg\",\n          _hover: {\n            bg: '#e261ed'\n          },\n          width: \"full\",\n          mt: 4,\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this); // return(\n  //     <Box>\n  //         <FormControl isRequired>\n  //             <FormLabel htmlFor='username'>Username</FormLabel>\n  //             <Input id='username' placeholder='Username' />\n  //         </FormControl>\n  //         <FormControl>\n  //             <FormLabel htmlFor='password'>Password</FormLabel>\n  //             <Input id='email' type='email' />\n  //             <FormHelperText>We'll never share your email.</FormHelperText>\n  //         </FormControl>\n  //     </Box>\n  // );\n}\n\n_s(Register, \"F3MmsvmzJGvcTRAmvFhrOf+YV1Q=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","FormControl","FormLabel","FormErrorMessage","FormHelperText","Input","Button","Flex","Heading","InputLeftElement","InputGroup","AtSignIcon","LockIcon","Register","nameInput","setNameInput","passInput","setPassInput","handleNameInputChange","e","target","value","handlePassInputChange","isNameError","isPassError","console","log","bg"],"sources":["/Users/abigaildelgado/IOU/frontend/src/pages/Register.js"],"sourcesContent":["import { React, useState } from 'react';\n// import Header from \"../components/NavBar.js\" \nimport {\n    Box,\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Input,\n    Button,\n    Flex,\n    Heading,\n    InputLeftElement,\n    InputGroup\n  } from '@chakra-ui/react'\n\nimport { AtSignIcon, LockIcon } from '@chakra-ui/icons'\n\n\n// import axios from 'axios'\n// const url = \"http://localhost:3030/user/signup/\" \n\nfunction Register() {\n    const [nameInput, setNameInput] = useState('')\n    const [passInput, setPassInput] = useState('')\n\n    const handleNameInputChange = (e) => setNameInput(e.target.value)\n    const handlePassInputChange = (e) => setPassInput(e.target.value)\n\n    const isNameError = nameInput === ''\n    const isPassError = passInput === ''\n\n    return (\n        <Box \n        h=\"100%\"\n        position=\"fixed\"\n        w=\"100%\"\n        background=\"linear-gradient(134.89deg, #D86FCC 0.46%, #01055B 100.26%)\"\n        color=\"white\"\n        >\n            {/* <Header /> */}\n            <Flex\n                align=\"center\"\n                direction=\"column\"\n                justify='space-evenly'\n                mr=\"30%\"\n                ml=\"30%\"\n                mt=\"100px\"\n                gap=\"10px\"\n            >\n                <Heading as='h1' size='xl'>Sign Up</Heading>\n               \n                <Heading textAlign=\"center\" as='h2' size='lg'>Sign up and start managing your group expenditures!</Heading>\n                \n                <Box w=\"50%\">\n                <FormControl isInvalid={isNameError}>\n                    <FormLabel htmlFor='username'></FormLabel>\n                    <InputGroup>\n                        <InputLeftElement\n                        pointerEvents='none'\n                        children={<AtSignIcon color='gray.300' />}\n                        />\n                        <Input\n                            id='username'\n                            type='username'\n                            value={nameInput}\n                            onChange={handleNameInputChange}\n                            placeholder='Username'\n                            // bg=\"rgba(255, 255, 255, 0.1)\"\n                            variant='filled'\n                        />\n                    </InputGroup>\n        \n                    {!isNameError ? (\n                        // <FormHelperText color=\"white\">\n                        // Enter a unique username.\n                        // </FormHelperText>\n                        console.log(\"hey\")\n                    ) : (\n                        <FormErrorMessage>A username is required.</FormErrorMessage>\n                    )}\n                </FormControl>\n                <FormControl isInvalid={isPassError} colorScheme=\"whiteAlpha\">\n                    <FormLabel htmlFor='password'></FormLabel>\n                    <InputGroup>\n                        <InputLeftElement \n                        pointerEvents='none'\n                        children={<LockIcon color='gray.300' />}\n                        />\n                        <Input\n                            id='password'\n                            type='password'\n                            value={passInput}\n                            onChange={handlePassInputChange}\n                            placeholder='Password'\n                        />\n                    </InputGroup>\n                    \n                    {!isPassError ? (\n                        <FormHelperText color=\"white\">\n                        Enter a password you won't forget!\n                        </FormHelperText>\n                    ) : (\n                        <FormErrorMessage>A password is required.</FormErrorMessage>\n                    )}\n                </FormControl>\n                <Button type=\"submit\" bg='#CA41D6' size='lg' _hover={{ bg: '#e261ed' }} width=\"full\" mt={4}>\n                    SIGN UP\n                </Button>\n                </Box>\n                \n            </Flex>\n        </Box>\n        \n    );\n    // return(\n    //     <Box>\n    //         <FormControl isRequired>\n    //             <FormLabel htmlFor='username'>Username</FormLabel>\n    //             <Input id='username' placeholder='Username' />\n    //         </FormControl>\n    //         <FormControl>\n    //             <FormLabel htmlFor='password'>Password</FormLabel>\n    //             <Input id='email' type='email' />\n    //             <FormHelperText>We'll never share your email.</FormHelperText>\n    //         </FormControl>\n            \n    //     </Box>\n\n    // );\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}